package access.denied.meta.repository

import android.app.Application
import access.denied.meta.dao.MalwareDao
import access.denied.meta.database.AppDatabase
import access.denied.meta.models.Malware


class MalwareRepository {

    companion object {

        lateinit var database: AppDatabase
        lateinit var malwareDao: MalwareDao
        lateinit var allMalware: List<String>

        @Volatile
        private var INSTANCE: MalwareRepository? = null
        fun getInstance(application: Application): MalwareRepository {
            database = AppDatabase.getInstance(application.applicationContext)
            malwareDao = database.malwareDao()
            allMalware = malwareDao.getAll()
            return INSTANCE ?: synchronized(this) {
                val appRepo = MalwareRepository()
                INSTANCE = appRepo
                appRepo
            }
        }
    }

    fun insert(malware: Malware) {
        malwareDao.insert(malware)
    }


    fun insertList(malwareList: List<Malware>) {
        malwareDao.insertList(malwareList)
    }

    fun getAllMalware(): List<String> {
        return malwareDao.getAll()
    }


}