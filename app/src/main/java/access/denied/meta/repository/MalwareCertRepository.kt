package access.denied.meta.repository

import android.app.Application
import access.denied.meta.dao.MalwareCertDao
import access.denied.meta.database.AppDatabase
import access.denied.meta.models.MalwareCert


class MalwareCertRepository {

    companion object {

        lateinit var database: AppDatabase
        lateinit var malwareCertDao: MalwareCertDao
        lateinit var allMalware: List<String>

        @Volatile
        private var INSTANCE: MalwareCertRepository? = null
        fun getInstance(application: Application): MalwareCertRepository {
            database = AppDatabase.getInstance(application.applicationContext)
            malwareCertDao = database.malwareCertDao()
            allMalware = malwareCertDao.getAll()
            return INSTANCE ?: synchronized(this) {
                val malwareCertRepo = MalwareCertRepository()
                INSTANCE = malwareCertRepo
                malwareCertRepo
            }
        }
    }

    fun insert(malwareCert: MalwareCert) {
        malwareCertDao.insert(malwareCert)
    }


    fun insertList(malwareCertList: List<MalwareCert>) {
        malwareCertDao.insertList(malwareCertList)
    }

    fun getAllMalwareCerts(): List<String> {
        return malwareCertDao.getAll()
    }


}